O PHP por dentro
    <?php   ?> -> super tag PHP
    <?      ?> -> short open tag
    <%      %> -> ASP tag
    <?=     ?> -> short tag PHP
------------------------------------------------------------------
Curso de PHP
------------------------------------------------------------------
Variáveis e constantes em PHP
 	O que são variáveis e constantes?
 		Variáveis -> toda variável tem um $ na frenta.
 		Exemplo 1:
 		$nome = "Gustavo";
 		$sobrenome = "Guanabara";
 		
 	Exemplos de atribuições -> Variáveis
 		$sobrenome = "Guanabara";
 			$idade = 43;
 			$peso = 118.5;
 			$casado = false;
 	Constantes
 		$sobrenome = "Guanabara";
 		const CURSO = "TI";
 	Regras para nomes identificadores
 		1° -> < Variáveis sempre começam com o símbolo $  >
 		2° -> < O segundo pode ser LETRA ou o SÍMBOLO >
 		3° -> < Aceita caracteres [a-z], [A-Z], e [_] >
 		4° -> < Aceita caracteres da tabela ASCII a partir de 128 >
 		5° -> < Aceita carcteres acentuados como á, õ, ç >
 		6° -> < A linguagem é case sensitive em relação aos nomes >
 		7° -> < Nomes especiais como $this não podem ser usados >
 -----------------------------------------------------------------------------------
 	EXEMPLO 001
 		$nome = "Pedro";
 		echo "É verdade que seu nome é $nome ?";
 	   RECOMENDAÇÕES para dar nomes:
 	   	1°-> < Tente dar nomes claros e de fácil identificação >
 	   	2°-> < Evite nomes muito curtos ou muito longos >
 	   	3°-> < Defina um padrão e siga em todo o projeto >
 	   	4°-> < Para variáveis, dê preferência a letras minúsculas >
 	   	5°-> < Para constantes, dê preferência a letras maiúsculas >
 	   	6°-> < Use camelCase para métodos e atributos >
 	   	7°-> < Use SNAKE_CASE para nomear constantes > 
 	 Operadores Aritméticos
 	 	Adição -> $r = $a + $b
 	 	Subtração -> $r = $a - $b
 	 	Multiplicação -> $r = $a * $b
 	 	Divisão -> $r = $a / $b
 	 	Módulo -> $r = $a % $b
 	 Ordem de Precedência
 	 	Parênteses -> ()
 	 	Multiplicação
 	 	      Divisão -> * / %
 	 	      Módulo	
 	   	      
 	   	      Adição  -> +-
 	   	   Subtração 
------------------------------------------------------------------
Tipos Primitivos do PHP
    Catogorias de tipos primitivos
        1°-> escalares
            Silva
            STRING => "São sequência de letras, números e símbolos, sempre representadas entre aspas."
            34
            INT ou INTEGER => "um valor numérico Inteiro, aquele
            que vem sem a parte decimal."
            -------------------------------------------------------
            FLOAT, DOUBLE OU REAL => "(real deixou de existir) um valor numarico Real, que vem com a a parte decimal, depois do ponto flutuante."
            -------------------------------------------------------
            BOOL ou BOOLEAN => "um valor lógico ou Booleano, que aceita apenas os valores verddadeiro ou falso (true ou false)."
        2°-> compostos
            
        3°-> especiais
---------------------------------------------------------------------
Tipos Primitivos do PHP
    Dez Exemplo de valores
    > "RJ"-> STRING     > -19-> int
    > "3.1415"-> double > "false"-> string   
    > "17"-> int        > 0x1A-> int 
    > "true"-> bool     > 3e2->  double  
    > ""-> string       > "1024"-> string
    Catogorias de tipos primitivos
        1°-> Tipos primitivos escalares
            Silva
            STRING => "São sequência de letras, números e símbolos, sempre representadas entre aspas."
            34
            INT ou INTEGER => "um valor numérico Inteiro, aquele
            que vem sem a parte decimal."
            -------------------------------------------------------
            FLOAT, DOUBLE OU REAL => "(real deixou de existir) um valor numarico Real, que vem com a a parte decimal, depois do ponto flutuante."
            -------------------------------------------------------
            BOOL ou BOOLEAN => "um valor lógico ou Booleano, que aceita apenas os valores verddadeiro ou falso (true ou false)."
        2°-> Tipos primitivos compostos
             array -> 
             objecto ->  
        3°-> Tipos primitivos especiais
             null -> 
             resouce ->
             callabe ->
             mixed ->
---------------------------------------------------------------------
---------------------------------------------------------------------
Manipulação de strings com PHP
    STRINGS EM PHP
        Quatro formatos de Strings
            1°-> double quoted ("aspas duplas")
                Exemplo:
                    "Curso"-> "Tudo que se coloca entre aspas duplas é string" -> concatenation operator
                    O símbolo de concatenação de strings é o (.)
                        "Curso" . "PHP"-> "CursoPHP"
                    Nas aspas duplas exite a interpretação do conteúdo.
                    "PHP\u{1F418}" -> Símbolo do PHP
            2°-> single quoted ('aspas simples')
                'PHP\u{1F418}' -> Símbolo do PHP
                Nas aspas simples não há interpretação do conteúdo.
            3°-> Sintaxe Heredoc 
                 $curso = "PHP";
                 $ano = date('Y');
                 echo<<< FRASE
                     Estou estudando
                            $curso em $ano --> Estou estudando PHP em 2023
                     FRASE;
            4°-> Nowdoc
                Exemplo:
                    constESTADO = "RJ";
                    echo "Moro no ESTADO"; -> Moro no ESTADO
                    echo 'Moro no ESTADO'; -> Moro no ESTADO
                        Para const não exite interpretação de strings
                    Para mostrar uma const basta utilizar o operador de concateção (.)
                    echo "Moro no" .ESTADO; 
                    echo "$nome\"Minotauro\"$sobrenome"; -> sequência de escape
                    ESCAPE SEQUENCES ('')
                        Para aspas simples só exite \
                    ESCAPE SEQUENCES ("") são:
                        1°-> \n Nova linha
                        2°-> \t Tabulação horizontal
                        3°->  \\ Barra invertida
                        4°->   \$ Sinal de cifrão
                        5°->   \u{} Codepoint Unicode
